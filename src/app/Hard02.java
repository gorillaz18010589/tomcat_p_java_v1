package app;
import myja.*;
public class Hard02  { //如果沒有建構式定義,那就是繼承object
	public static void main(String[] args) {
		//你今天這個=號在做的事情,就是做初始化有兩階段動作如下(1),(2)	
		//(1)配置一個記憶體空間 =>new
		//(2)配置完後進行初始化的行為bike() ,就去看你建構是做什麼事情去執行
		//沒有建構式的情況,她其實有預設建構式,只是目前看不到
		//點選api發現所有的爸爸都是java.lang.Object
		//所以你只要沒有建構式,你就繼承了object這爸爸的方法
		//任何的bike b1 = new bike();都有建構式不會沒有,如果沒有就會找你爸爸裡面的建構式,給你沒有傳參數地當建構式
		//object爸爸也有寫建構式,只是也是空空的所以你沒有感覺
		//你只要寫上你的建構式,那爸爸尊重你不會沒有,以你為主.
		//建構式不是繼承,是因為你沒有,我才拿你爸爸的拿來用
//		bike b1 = new bike(); //本來宣告有一台腳踏車不會顯示,但因為我有建構式印出東西所以才剛呼叫腳踏車就出現
//		b1.toString(); 這就是object的方法
		bike b1 = new bike(1); //因為你的建構式原本是Object沒有參數,但因為我建構是加了(int a)所以你要尊重我,也要加int參數
		Scooter s1 = new Scooter();
//		s1.notifyAll(); 發現不但繼承腳踏車的方法,還有阿公的方法,因為有阿公有爸爸才有你,他一定偷偷做了什麼事,你才叫得出阿公的方法
	}

}
